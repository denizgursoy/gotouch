// Code generated by MockGen. DO NOT EDIT.
// Source: ./checker.go

// Package langs is a generated GoMock package.
package langs

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockChecker is a mock of Checker interface.
type MockChecker struct {
	ctrl     *gomock.Controller
	recorder *MockCheckerMockRecorder
}

// MockCheckerMockRecorder is the mock recorder for MockChecker.
type MockCheckerMockRecorder struct {
	mock *MockChecker
}

// NewMockChecker creates a new mock instance.
func NewMockChecker(ctrl *gomock.Controller) *MockChecker {
	mock := &MockChecker{ctrl: ctrl}
	mock.recorder = &MockCheckerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockChecker) EXPECT() *MockCheckerMockRecorder {
	return m.recorder
}

// CheckDependency mocks base method.
func (m *MockChecker) CheckDependency(dependency any) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckDependency", dependency)
	ret0, _ := ret[0].(error)
	return ret0
}

// CheckDependency indicates an expected call of CheckDependency.
func (mr *MockCheckerMockRecorder) CheckDependency(dependency interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckDependency", reflect.TypeOf((*MockChecker)(nil).CheckDependency), dependency)
}

// CheckSetup mocks base method.
func (m *MockChecker) CheckSetup() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckSetup")
	ret0, _ := ret[0].(error)
	return ret0
}

// CheckSetup indicates an expected call of CheckSetup.
func (mr *MockCheckerMockRecorder) CheckSetup() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckSetup", reflect.TypeOf((*MockChecker)(nil).CheckSetup))
}

// CleanUp mocks base method.
func (m *MockChecker) CleanUp() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CleanUp")
	ret0, _ := ret[0].(error)
	return ret0
}

// CleanUp indicates an expected call of CleanUp.
func (mr *MockCheckerMockRecorder) CleanUp() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CleanUp", reflect.TypeOf((*MockChecker)(nil).CleanUp))
}

// GetDependency mocks base method.
func (m *MockChecker) GetDependency(dependency any) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDependency", dependency)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetDependency indicates an expected call of GetDependency.
func (mr *MockCheckerMockRecorder) GetDependency(dependency interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDependency", reflect.TypeOf((*MockChecker)(nil).GetDependency), dependency)
}

// Setup mocks base method.
func (m *MockChecker) Setup() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Setup")
	ret0, _ := ret[0].(error)
	return ret0
}

// Setup indicates an expected call of Setup.
func (mr *MockCheckerMockRecorder) Setup() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Setup", reflect.TypeOf((*MockChecker)(nil).Setup))
}
